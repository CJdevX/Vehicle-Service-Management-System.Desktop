package Panel;

import Class.Database;
import Notification.Notification;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

public class stockPanel extends javax.swing.JPanel {

    Connection connect;
    DecimalFormat decimalFormat = new DecimalFormat("0.00");
    
    public stockPanel() {
        initComponents();

        // TABLE CELL RENDERING
        DefaultTableCellRenderer rightAlign = new DefaultTableCellRenderer();
        rightAlign.setHorizontalAlignment(SwingConstants.RIGHT);
        tbl_stock.getColumnModel().getColumn(3).setCellRenderer(rightAlign);
        tbl_stock.getColumnModel().getColumn(4).setCellRenderer(rightAlign);
        tbl_stock.getColumnModel().getColumn(5).setCellRenderer(rightAlign);
        tbl_stock.getColumnModel().getColumn(6).setCellRenderer(rightAlign);
        //====================================================================//
       
        loadData();
    }

    private void loadData() {
        try {
            connect = Database.openConnection();
            String sql = "SELECT * FROM stock";
            PreparedStatement statement = connect.prepareStatement(sql);

            ResultSet result = statement.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tbl_stock.getModel();
            model.setRowCount(0);

            while (result.next()) {
                String id = result.getString("partID");
                String name = result.getString("name");
                String brand = result.getString("brand");
                String price = decimalFormat.format(result.getDouble("price"));
                String discount = decimalFormat.format(result.getDouble("discount"));
                String subPrice = decimalFormat.format(result.getDouble("subPrice"));
                int qty = result.getInt("qty");

                model.addRow(new Object[]{id, name, brand, price, discount, subPrice, qty});
            }
            connect.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e + "Data Load Unsuccessful", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void clearData() {
        txt_no.setText("");
        txt_name.setText("");
        txt_brand.setText("");
        txt_price.setText("");
        txt_discount.setText("");
        spn_qty.setValue(0);
        search.setText("");
    }

    private void enableButton() {
        btn_delete.setEnabled(true);
        btn_update.setEnabled(true);
        btn_add.setEnabled(false);
    }

    private void disableButton() {
        btn_delete.setEnabled(false);
        btn_update.setEnabled(false);
        btn_add.setEnabled(true);
    }

    private void showNotification(String Message) {
        Notification noti = new Notification(this, Notification.Type.SUCCESS, Notification.Location.TOP_CENTER, Message);
        noti.showNotification();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        lbl_partDetails = new javax.swing.JLabel();
        lbl_partNo = new javax.swing.JLabel();
        txt_no = new javax.swing.JTextField();
        lbl_partName = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        lbl_brand = new javax.swing.JLabel();
        txt_brand = new javax.swing.JTextField();
        lbl_price = new javax.swing.JLabel();
        txt_price = new javax.swing.JTextField();
        lbl_dicount = new javax.swing.JLabel();
        txt_discount = new javax.swing.JTextField();
        lbl_qty = new javax.swing.JLabel();
        spn_qty = new javax.swing.JSpinner();
        btn_add = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        lbl_search = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_stock = new javax.swing.JTable();

        setBackground(new java.awt.Color(211, 211, 211));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        lbl_partDetails.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lbl_partDetails.setText("Part Details");

        lbl_partNo.setText("Part No");

        txt_no.setEnabled(false);

        lbl_partName.setText("Part Name");

        lbl_brand.setText("Brand");

        lbl_price.setText("Price");

        lbl_dicount.setText("Discount");

        lbl_qty.setText("Quantity");

        btn_add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/add_30px.png"))); // NOI18N
        btn_add.setText("Add");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        btn_clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/eraser_30px.png"))); // NOI18N
        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        btn_update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/update_30px.png"))); // NOI18N
        btn_update.setText("Update");
        btn_update.setEnabled(false);
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/cancel_30px.png"))); // NOI18N
        btn_delete.setText("Delete");
        btn_delete.setEnabled(false);
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lbl_partDetails)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_brand)
                            .addComponent(lbl_partName)
                            .addComponent(lbl_price)
                            .addComponent(lbl_partNo)
                            .addComponent(lbl_dicount)
                            .addComponent(lbl_qty))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_name)
                                .addComponent(txt_brand)
                                .addComponent(txt_price)
                                .addComponent(txt_no)
                                .addComponent(txt_discount, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(spn_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btn_update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lbl_partDetails)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_partNo)
                    .addComponent(txt_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_partName)
                    .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_brand)
                    .addComponent(txt_brand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_price)
                    .addComponent(txt_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_dicount)
                    .addComponent(txt_discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spn_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_qty))
                .addGap(41, 41, 41)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_add)
                    .addComponent(btn_clear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_update)
                    .addComponent(btn_delete))
                .addContainerGap())
        );

        lbl_search.setText("Search by Part Name");

        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });

        tbl_stock.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbl_stock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Part No", "Part Name", "Brand", "Price", "Discount", "Sub Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_stock.setRowHeight(30);
        tbl_stock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_stockMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_stock);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_search)
                            .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        try {
            connect = Database.openConnection();
            String sql = "INSERT INTO stock(name, brand, price, discount, subPrice, qty) VALUES(?, ?, ?, ?, ?, ?)";
            PreparedStatement statement = connect.prepareStatement(sql);
            statement.setString(1, txt_name.getText().toUpperCase());
            statement.setString(2, txt_brand.getText().toUpperCase());
            statement.setDouble(3, Double.parseDouble(txt_price.getText()));
            if (txt_discount.getText().isEmpty()) {
                statement.setString(4, null);
                statement.setDouble(5, Double.parseDouble(txt_price.getText()));
            } else {
                statement.setDouble(4, Double.parseDouble(txt_discount.getText()));
                double subPrice = Double.parseDouble(txt_price.getText()) - Double.parseDouble(txt_discount.getText());
                statement.setDouble(5, subPrice);
            }
            statement.setInt(6, Integer.parseInt(spn_qty.getValue().toString()));
            statement.executeUpdate();
            showNotification("Stock Insert Successful");
            connect.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
        loadData();
        clearData();
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        try {
            connect = Database.openConnection();
            String sql = "UPDATE stock SET name = ?, brand = ?, price = ?, discount = ?, subPrice = ?, qty = ? WHERE partID = ?";
            PreparedStatement statement = connect.prepareStatement(sql);
            statement.setString(1, txt_name.getText().toUpperCase());
            statement.setString(2, txt_brand.getText().toUpperCase());
            statement.setDouble(3, Double.parseDouble(txt_price.getText()));

            if (txt_discount.getText().isEmpty()) {
                statement.setString(4, null);
                statement.setDouble(5, Double.parseDouble(txt_price.getText()));
            } else {
                statement.setDouble(4, Double.parseDouble(txt_discount.getText()));
                double subPrice = Double.parseDouble(txt_price.getText()) - Double.parseDouble(txt_discount.getText());
                statement.setDouble(5, subPrice);
            }

            statement.setInt(6, Integer.parseInt(spn_qty.getValue().toString()));
            statement.setInt(7, Integer.parseInt(txt_no.getText()));
            statement.executeUpdate();
            showNotification("Stock Update Successful");
            connect.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
        loadData();
        clearData();
        disableButton();
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete?", null, JOptionPane.YES_NO_OPTION);
        if (response == JOptionPane.YES_OPTION) {
            try {
                connect = Database.openConnection();
                String sql = "DELETE FROM stock WHERE partID = " + txt_no.getText();
                PreparedStatement statement = connect.prepareStatement(sql);
                statement.executeUpdate();
                showNotification("Stock Delete Successful");
                connect.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
            }
            loadData();
            clearData();
            disableButton();
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        clearData();
        disableButton();
    }//GEN-LAST:event_btn_clearActionPerformed

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        try {
            connect = Database.openConnection();
            String sql = "SELECT * FROM stock WHERE ";
            sql = sql + "partID LIKE '%" + search.getText() + "%' OR ";
            sql = sql + "name LIKE '%" + search.getText() + "%' OR ";
            sql = sql + "brand LIKE '%" + search.getText() + "%'";
            PreparedStatement statement = connect.prepareStatement(sql);

            ResultSet result = statement.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tbl_stock.getModel();
            model.setRowCount(0);

            while (result.next()) {
                String id = result.getString("partId");
                String name = result.getString("name");
                String brand = result.getString("brand");
                String price = result.getString("price");
                String discount = result.getString("discount");
                String subPrice = result.getString("subPrice");
                String qty = result.getString("qty");

                model.addRow(new Object[]{id, name, brand, price, discount, subPrice, qty});
            }
            connect.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchKeyReleased

    private void tbl_stockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_stockMouseClicked
        enableButton();
        int row = tbl_stock.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tbl_stock.getModel();

        txt_no.setText(model.getValueAt(row, 0).toString());
        txt_name.setText(model.getValueAt(row, 1).toString());
        txt_brand.setText(model.getValueAt(row, 2).toString());
        txt_price.setText(model.getValueAt(row, 3).toString());
        txt_discount.setText(model.getValueAt(row, 4).toString());
        spn_qty.setValue(Integer.valueOf(model.getValueAt(row, 6).toString()));
    }//GEN-LAST:event_tbl_stockMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_update;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_brand;
    private javax.swing.JLabel lbl_dicount;
    private javax.swing.JLabel lbl_partDetails;
    private javax.swing.JLabel lbl_partName;
    private javax.swing.JLabel lbl_partNo;
    private javax.swing.JLabel lbl_price;
    private javax.swing.JLabel lbl_qty;
    private javax.swing.JLabel lbl_search;
    private javax.swing.JTextField search;
    private javax.swing.JSpinner spn_qty;
    private javax.swing.JTable tbl_stock;
    private javax.swing.JTextField txt_brand;
    private javax.swing.JTextField txt_discount;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_no;
    private javax.swing.JTextField txt_price;
    // End of variables declaration//GEN-END:variables
}
