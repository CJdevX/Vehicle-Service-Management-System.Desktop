package Panel;

import Class.Database;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import Notification.Notification;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class userPanel extends javax.swing.JPanel {

    Connection connect;
    private String check;

    public userPanel() {
        initComponents();
        loadData();
    }

    private void loadData() {
        try {
            connect = Database.openConnection();
            String sql = "SELECT * FROM user";
            PreparedStatement statement = connect.prepareStatement(sql);
            ResultSet result = statement.executeQuery();

            DefaultTableModel model = (DefaultTableModel) tbl_user.getModel();
            model.setRowCount(0);

            while (result.next()) {
                String name = result.getString("firstName") + " " + result.getString("lastName");
                String gender = result.getString("gender");
                String phone = result.getString("phone");
                String email = result.getString("email");
                String role = result.getString("role");

                model.addRow(new Object[]{name, gender, phone, email, role});
            }
            connect.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e + "Data Load Unsuccessful", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void clearData() {
        txt_firstName.setText("");
        txt_lastName.setText("");
        btngrp_gender.clearSelection();
        txt_phone.setText("");
        txt_email.setText("");
        search.setText("");
        cmb_role.setSelectedIndex(0);
    }

    private void enableButton() {
        btn_update.setEnabled(true);
        btn_delete.setEnabled(true);
        btn_add.setEnabled(false);
    }

    private void disableButton() {
        btn_update.setEnabled(false);
        btn_delete.setEnabled(false);
        btn_add.setEnabled(true);
    }

    private void showNotification(String Message) {
        Notification noti = new Notification(this, Notification.Type.SUCCESS, Notification.Location.TOP_CENTER, Message);
        noti.showNotification();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrp_gender = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        lbl_userDetails = new javax.swing.JLabel();
        btn_add = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        lbl_firstName = new javax.swing.JLabel();
        txt_firstName = new javax.swing.JTextField();
        lbl_lastName = new javax.swing.JLabel();
        txt_lastName = new javax.swing.JTextField();
        lbl_gender = new javax.swing.JLabel();
        rdb_male = new javax.swing.JRadioButton();
        rdb_female = new javax.swing.JRadioButton();
        lbl_phone = new javax.swing.JLabel();
        txt_phone = new javax.swing.JTextField();
        lbl_email = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        btn_update = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        lbl_role = new javax.swing.JLabel();
        cmb_role = new javax.swing.JComboBox<>();
        lbl_search = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_user = new javax.swing.JTable();

        setBackground(new java.awt.Color(211, 211, 211));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        lbl_userDetails.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lbl_userDetails.setText("System User Details");

        btn_add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/add_30px.png"))); // NOI18N
        btn_add.setText("Add");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        btn_clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/eraser_30px.png"))); // NOI18N
        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        lbl_firstName.setText("First Name");

        lbl_lastName.setText("Last Name");

        lbl_gender.setText("Gender");

        btngrp_gender.add(rdb_male);
        rdb_male.setText("Male");

        btngrp_gender.add(rdb_female);
        rdb_female.setText("Female");

        lbl_phone.setText("Telephone Number");

        lbl_email.setText("E-Mail");

        btn_update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/update_30px.png"))); // NOI18N
        btn_update.setText("Update");
        btn_update.setEnabled(false);
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/cancel_30px.png"))); // NOI18N
        btn_delete.setText("Delete");
        btn_delete.setEnabled(false);
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        lbl_role.setText("Role");

        cmb_role.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ADMIN", "CASHIER", "MECHANIC" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_lastName)
                    .addComponent(lbl_firstName)
                    .addComponent(lbl_gender)
                    .addComponent(lbl_email)
                    .addComponent(lbl_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_role))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmb_role, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txt_phone)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(rdb_male)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                                    .addComponent(rdb_female)))
                            .addGap(48, 48, 48))
                        .addComponent(txt_firstName)
                        .addComponent(txt_lastName, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lbl_userDetails))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lbl_userDetails)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_firstName)
                    .addComponent(txt_firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_lastName)
                    .addComponent(txt_lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_gender)
                    .addComponent(rdb_male)
                    .addComponent(rdb_female))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_phone)
                    .addComponent(txt_phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_email)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_role, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_role))
                .addGap(50, 50, 50)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_add)
                    .addComponent(btn_clear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_update)
                    .addComponent(btn_delete))
                .addGap(20, 20, 20))
        );

        lbl_search.setText("Search by Name");

        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });

        tbl_user.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbl_user.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Gender", "Tel. No", "E-mail", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_user.setRowHeight(30);
        tbl_user.setShowGrid(false);
        tbl_user.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_userMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_user);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                        .addComponent(lbl_search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_search)
                            .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        try {
            connect = Database.openConnection();
            String sql = "INSERT INTO user(firstName, lastName, gender, phone, email, role) VALUES(?, ?, ?, ?, ?, ?)";
            PreparedStatement statement = connect.prepareStatement(sql);
            statement.setString(1, txt_firstName.getText().toUpperCase());
            statement.setString(2, txt_lastName.getText().toUpperCase());
            if (rdb_male.isSelected()) {
                statement.setString(3, "MALE");
            } else if (rdb_female.isSelected()) {
                statement.setString(3, "FEMALE");
            }
            statement.setInt(4, Integer.parseInt(txt_phone.getText()));
            statement.setString(5, txt_email.getText());
            statement.setString(6, cmb_role.getSelectedItem().toString());
            statement.executeUpdate();
            showNotification("User Insert Successful");
            connect.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
        loadData();
        clearData();
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        try {
            connect = Database.openConnection();
            String sql = "UPDATE user SET firstName = ?, lastName = ?, gender = ?, phone = ?, email = ?, role = ? WHERE phone = ?";
            PreparedStatement statement = connect.prepareStatement(sql);
            statement.setString(1, txt_firstName.getText().toUpperCase());
            statement.setString(2, txt_lastName.getText().toUpperCase());
            if (rdb_male.isSelected()) {
                statement.setString(3, "MALE");
            } else if (rdb_female.isSelected()) {
                statement.setString(3, "FEMALE");
            }
            statement.setInt(4, Integer.parseInt(txt_phone.getText()));
            statement.setString(5, txt_email.getText());
            statement.setString(6, cmb_role.getSelectedItem().toString());
            statement.setInt(7, Integer.parseInt(check));
            statement.executeUpdate();
            showNotification("User Update Successful");
            connect.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
        }

        loadData();
        clearData();
        disableButton();
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete?", null, JOptionPane.YES_NO_OPTION);
        if (response == JOptionPane.YES_OPTION) {
            try {
                connect = Database.openConnection();
                String sql = "DELETE FROM user WHERE phone = " + txt_phone.getText();
                PreparedStatement statement = connect.prepareStatement(sql);
                statement.executeUpdate();
                showNotification("User Delete Successful");
                connect.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
            }

            loadData();
            clearData();
            disableButton();
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        clearData();
        disableButton();
    }//GEN-LAST:event_btn_clearActionPerformed

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        DefaultTableModel model = (DefaultTableModel) tbl_user.getModel();
        model.setRowCount(0);
        try {
            connect = Database.openConnection();
            String sql = "SELECT * FROM user WHERE ";
            sql = sql + "firstName LIKE '%" + search.getText() + "%' OR ";
            sql = sql + "lastName LIKE '%" + search.getText() + "%'";
            PreparedStatement statement = connect.prepareStatement(sql);
            ResultSet result = statement.executeQuery();
            while (result.next()) {
                String name = result.getString("firstName") + " " + result.getString("lastName");
                String gender = result.getString("gender");
                String phone = result.getString("phone");
                String email = result.getString("email");

                model.addRow(new Object[]{name, gender, phone, email});
            }
            connect.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchKeyReleased

    private void tbl_userMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_userMouseClicked
        int row = tbl_user.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tbl_user.getModel();

        String name = model.getValueAt(row, 0).toString();
        String[] nameParts = name.split(" ");

        if (nameParts.length >= 2) {
            txt_firstName.setText(nameParts[0]);
            txt_lastName.setText(nameParts[1]);
        } else {
            txt_firstName.setText(nameParts[0]);
            txt_lastName.setText("");
        }

        String gender = model.getValueAt(row, 1).toString();
        if ("MALE".equals(gender)) {
            rdb_male.setSelected(true);
        } else if ("FEMALE".equals(gender)) {
            rdb_female.setSelected(true);
        }

        txt_phone.setText(model.getValueAt(row, 2).toString());
        txt_email.setText(model.getValueAt(row, 3).toString());
        cmb_role.setSelectedItem(model.getValueAt(row, 4).toString());
        check = model.getValueAt(row, 2).toString();
        enableButton();
    }//GEN-LAST:event_tbl_userMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_update;
    private javax.swing.ButtonGroup btngrp_gender;
    private javax.swing.JComboBox<String> cmb_role;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_email;
    private javax.swing.JLabel lbl_firstName;
    private javax.swing.JLabel lbl_gender;
    private javax.swing.JLabel lbl_lastName;
    private javax.swing.JLabel lbl_phone;
    private javax.swing.JLabel lbl_role;
    private javax.swing.JLabel lbl_search;
    private javax.swing.JLabel lbl_userDetails;
    private javax.swing.JRadioButton rdb_female;
    private javax.swing.JRadioButton rdb_male;
    private javax.swing.JTextField search;
    private javax.swing.JTable tbl_user;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_firstName;
    private javax.swing.JTextField txt_lastName;
    private javax.swing.JTextField txt_phone;
    // End of variables declaration//GEN-END:variables
}
